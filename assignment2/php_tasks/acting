#!/usr/bin/php
<?php

////////////////////////////////////////////////////////////////////////////////
//                                TASK A                                      //
////////////////////////////////////////////////////////////////////////////////
//
// The acting script lists the movie title, its director, its year, its content
// Rating and IMDB score, one per line, of all the movies acted by the given
// Actor. The output is sorted by year and then by movie title,
// Both in ascending order. If any movies have empty year, output them at the
// End and sort them by movie title in ascending order. It accepts one
// Command-line argument: an actor name (has to exactly match a name stored in
// The database and the matching is case insensitive). It has the following
// Output format:
//

// include the common PHP code file
require("a2.php");

// PROGRAM BODY BEGINS

$usage = "Usage: $argv[0] Actor";
$db = dbConnect(DB_CONNECTION);

// Check arguments
if (count($argv) < 2) 
  exit("$usage\n");

// Get the return results
$actor = strtolower($argv[1]);
$q = "SELECT actor_movie_id.actor_name,
           movie_list.title,
           director_list.name,
           movie_list.year,
           movie_list.content_rating,
           rating_list.imdb_score
    FROM (SELECT actor_list.name as actor_name,
                 acting_list.movie_id as movie_id
          FROM actor actor_list
               FULL OUTER JOIN acting acting_list
                          ON acting_list.actor_id = actor_list.id
                             WHERE LOWER(actor_list.name) = '$actor') actor_movie_id
         LEFT JOIN movie movie_list
                    ON movie_list.id = actor_movie_id.movie_id
         LEFT JOIN rating rating_list
                    ON movie_list.id = rating_list.movie_id
         LEFT JOIN director director_list
                    ON director_list.id = movie_list.director_id
    ORDER BY actor_movie_id.actor_name, movie_list.year;";
$r = dbQuery($db, mkSQL($q, $actor));

// Iterate through the results and print
$i = 1;
while ($t = dbNext($r)) {
  if(empty($t[3]) && empty($t[4]) && empty($t[5])){
    if(empty($t[2]))
      echo "$i. $t[1]";
    else
  	  echo "$i. $t[1] -- $t[2]";

  	return;
  }
  if(empty($t[2]))
    echo "$i. $t[1] (";
  else
    echo "$i. $t[1] -- $t[2] (";
  if (!empty($t[3]))
    echo "$t[3], ";
  if (!empty($t[4]))
      echo "$t[4], ";
  if(!empty($t[5]))
  	  echo "$t[5]";
  echo ")\n";
  $i++;
}

?>
